%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.4
%%CreationDate: Wed May 08 21:32:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGGAUUUAGCUCAGUUGGGAGAGCGCCAGACUGAAGAUCUGGAGGUCCUGUGUUCGAUCCACAGAAUUCGCACCAGGGG\
) def
/coor [
[92.50000000 92.50000000]
[77.53843689 91.32279968]
[62.71536255 88.97534943]
[48.12216187 85.47212219]
[33.84881210 80.83471680]
[19.98330879 75.09172821]
[6.61114168 68.27856445]
[-6.18524456 60.43722534]
[-18.32695389 51.61605835]
[-29.73913002 41.86945343]
[-40.35140991 31.25749779]
[-50.09836578 19.84562111]
[-58.91990280 7.70418072]
[-66.76163483 -5.09196520]
[-73.57521057 -18.46392250]
[-79.31862640 -32.32925034]
[-83.95646667 -46.60245895]
[-87.46013641 -61.19555283]
[-89.80804443 -76.01855469]
[-90.98570251 -90.98007965]
[-90.98585510 -105.98788452]
[-89.80850220 -120.94943237]
[-87.46089935 -135.77247620]
[-83.95752716 -150.36564636]
[-79.31997681 -164.63894653]
[-73.57684326 -178.50439453]
[-66.76354218 -191.87649536]
[-58.92207336 -204.67280579]
[-50.10078430 -216.81442261]
[-40.35406113 -228.22650146]
[-29.74199677 -238.83866882]
[-18.33002090 -248.58551025]
[-6.18848991 -257.40692139]
[6.60773563 -265.24853516]
[19.97976303 -272.06195068]
[33.84514999 -277.80523682]
[48.11840820 -282.44293213]
[62.71153641 -285.94644165]
[77.53456116 -288.29418945]
[92.49610138 -289.47171021]
[107.50389862 -289.47171021]
[122.46543884 -288.29418945]
[137.28846741 -285.94644165]
[151.88159180 -282.44293213]
[166.15484619 -277.80523682]
[180.02023315 -272.06195068]
[193.39225769 -265.24853516]
[206.18849182 -257.40692139]
[218.33001709 -248.58551025]
[229.74198914 -238.83866882]
[240.35406494 -228.22650146]
[250.10078430 -216.81442261]
[258.92205811 -204.67280579]
[266.76354980 -191.87649536]
[273.57684326 -178.50439453]
[279.31997681 -164.63894653]
[283.95751953 -150.36564636]
[287.46090698 -135.77247620]
[289.80850220 -120.94943237]
[290.98587036 -105.98788452]
[290.98568726 -90.98007965]
[289.80804443 -76.01855469]
[287.46014404 -61.19555283]
[283.95645142 -46.60245895]
[279.31863403 -32.32925034]
[273.57522583 -18.46392250]
[266.76162720 -5.09196520]
[258.91989136 7.70418072]
[250.09837341 19.84562111]
[240.35140991 31.25749779]
[229.73913574 41.86945343]
[218.32695007 51.61605835]
[206.18524170 60.43722534]
[193.38885498 68.27856445]
[180.01669312 75.09172821]
[166.15118408 80.83471680]
[151.87783813 85.47212219]
[137.28463745 88.97534943]
[122.46156311 91.32279968]
[107.50000000 92.50000000]
] def
/pairs [
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
